From a9236f549f28811a5af0c71ce6708d1f259d0e78 Mon Sep 17 00:00:00 2001
From: Hans de Goede <hdegoede@redhat.com>
Date: Sat, 1 Feb 2025 08:04:35 +0100
Subject: [PATCH 8/9] ipu6-psys: Adjust DMA code for ipu6-bus DMA changes in
 kernels >= 6.12

Upstream commit daabc5c64703 ("media: ipu6: not override the dma_ops of
device in driver") has changed the ipu6-bus code to no longer modify
the aux device's dma_ops, instead new ipu6_dma_*() helpers were introduced
modify the psys driver to use these new helpers.

This fixes the below DMA warning, which was followed by ipu6_psys_probe()
failing due to dma_alloc_attrs() failing:

Jan 31 11:59:59 x1 kernel: ------------[ cut here ]------------
Jan 31 11:59:59 x1 kernel: WARNING: CPU: 3 PID: 8595 at kernel/dma/mapping.c:597 dma_alloc_attrs+0x12b/0x140
Jan 31 11:59:59 x1 kernel: Modules linked in: intel_ipu6_psys(OE+) rfcomm snd_seq_dummy snd_hrtimer qrtr bnep binfmt_misc vfat fat snd_soc_skl_hda_dsp snd_soc_intel_sof_board_helpers snd_sof_probes snd_soc_intel_hda_dsp_common snd_hda_codec_hdmi snd_hda_codec_realtek snd_hda_codec_generic snd_hda_scodec_component snd_soc_dmic snd_sof_pci_intel_mtl snd_sof_intel_hda_generic soundwire_intel soundwire_cadence snd_sof_intel_hda_common snd_soc_hdac_hda iwlmvm snd_sof_intel_hda_mlink snd_sof_intel_hda snd_sof_pci snd_sof_xtensa_dsp snd_sof snd_sof_utils snd_hda_ext_core mac80211 snd_soc_acpi_intel_match soundwire_generic_allocation snd_soc_acpi intel_uncore_frequency soundwire_bus intel_uncore_frequency_common x86_pkg_temp_thermal snd_soc_core intel_ipu6_isys intel_powerclamp videobuf2_dma_sg coretemp snd_compress videobuf2_memops ac97_bus videobuf2_v4l2 snd_pcm_dmaengine videobuf2_common snd_hda_intel libarc4 snd_intel_dspcfg snd_intel_sdw_acpi kvm_intel snd_hda_codec spi_nor btusb iTCO_wdt btrtl mhi_wwan_mbim intel_pmc_bxt mhi_wwan_ctrl
Jan 31 11:59:59 x1 kernel:  snd_hda_core mei_gsc_proxy gpio_usbio(OE) mei_wdt i2c_usbio(OE) mtd iTCO_vendor_support intel_rapl_msr btintel snd_hwdep kvm btbcm btmtk snd_seq snd_ctl_led hid_sensor_accel_3d hid_sensor_gyro_3d iwlwifi bluetooth snd_seq_device rapl processor_thermal_device_pci intel_cstate hid_sensor_trigger think_lmi processor_thermal_device hid_sensor_iio_common processor_thermal_wt_hint industrialio_triggered_buffer intel_uncore usbio(OE) firmware_attributes_class snd_pcm wmi_bmof mhi_pci_generic kfifo_buf processor_thermal_rfim i2c_i801 mei_me cfg80211 processor_thermal_rapl thinkpad_acpi spi_intel_pci mhi industrialio thunderbolt snd_timer spi_intel mei intel_ipu6 i2c_smbus intel_rapl_common idma64 platform_profile processor_thermal_wt_req ipu_bridge rfkill processor_thermal_power_floor snd igen6_edac processor_thermal_mbox int3403_thermal soundcore soc_button_array int340x_thermal_zone intel_pmc_core intel_skl_int3472_tps68470 ov08x40(OE) tps68470_regulator v4l2_fwnode clk_tps68470 intel_vsec v4l2_async
Jan 31 11:59:59 x1 kernel:  pmt_telemetry intel_skl_int3472_discrete int3400_thermal intel_hid acpi_tad pmt_class intel_skl_int3472_common acpi_pad sparse_keymap joydev acpi_thermal_rel loop nfnetlink zram lz4hc_compress lz4_compress dm_crypt xe drm_ttm_helper gpu_sched drm_suballoc_helper drm_gpuvm drm_exec hid_sensor_hub intel_ishtp_hid i915 i2c_algo_bit drm_buddy nvme ttm nvme_core drm_display_helper intel_ish_ipc video ucsi_acpi crct10dif_pclmul hid_multitouch crc32_pclmul crc32c_intel polyval_clmulni polyval_generic ghash_clmulni_intel intel_vpu sha512_ssse3 sha256_ssse3 typec_ucsi sha1_ssse3 intel_ishtp cec typec nvme_auth i2c_hid_acpi i2c_hid wmi pinctrl_meteorlake serio_raw v4l2loopback(OE) videodev mc i2c_dev fuse
Jan 31 11:59:59 x1 kernel: CPU: 3 UID: 0 PID: 8595 Comm: modprobe Tainted: G           OE      6.12.10-200.fc41.x86_64 #1
Jan 31 11:59:59 x1 kernel: Tainted: [O]=OOT_MODULE, [E]=UNSIGNED_MODULE
Jan 31 11:59:59 x1 kernel: Hardware name: LENOVO 21KCSIT080/21KCSIT080, BIOS N3YET72W (1.37 ) 10/03/2024
Jan 31 11:59:59 x1 kernel: RIP: 0010:dma_alloc_attrs+0x12b/0x140
Jan 31 11:59:59 x1 kernel: Code: 4c 89 e6 48 89 df e8 94 5d 9a 00 49 89 c7 e9 62 ff ff ff 0f 0b 45 31 ff 5b 5d 4c 89 f8 41 5c 41 5d 41 5e 41 5f c3 cc cc cc cc <0f> 0b e9 0d ff ff ff 45 31 ff e9 3e ff ff ff 66 0f 1f 44 00 00 90
Jan 31 11:59:59 x1 kernel: RSP: 0018:ffffaeefe452fbc8 EFLAGS: 00010246
Jan 31 11:59:59 x1 kernel: RAX: 0000000000000000 RBX: ffff936a8de60800 RCX: 0000000000000cc0
Jan 31 11:59:59 x1 kernel: RDX: ffff936af6c65018 RSI: 0000000000002000 RDI: ffff936a8de60800
Jan 31 11:59:59 x1 kernel: RBP: ffff936a8de60800 R08: 0000000000000000 R09: ffff936af6c65000
Jan 31 11:59:59 x1 kernel: R10: ffffaeefe452fc00 R11: ffff9371bf9a17c0 R12: 0000000000002000
Jan 31 11:59:59 x1 kernel: R13: ffff936af6c65018 R14: 0000000000000000 R15: ffff936a9d9be440
Jan 31 11:59:59 x1 kernel: FS:  00007f8ff258f740(0000) GS:ffff9371bf980000(0000) knlGS:0000000000000000
Jan 31 11:59:59 x1 kernel: CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
Jan 31 11:59:59 x1 kernel: CR2: 00007f2e39eee67c CR3: 000000013b884003 CR4: 0000000000f72ef0
Jan 31 11:59:59 x1 kernel: DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
Jan 31 11:59:59 x1 kernel: DR3: 0000000000000000 DR6: 00000000ffff07f0 DR7: 0000000000000400
Jan 31 11:59:59 x1 kernel: PKRU: 55555554
Jan 31 11:59:59 x1 kernel: Call Trace:
Jan 31 11:59:59 x1 kernel:  <TASK>
Jan 31 11:59:59 x1 kernel:  ? dma_alloc_attrs+0x12b/0x140
Jan 31 11:59:59 x1 kernel:  ? __warn.cold+0x93/0xfa
Jan 31 11:59:59 x1 kernel:  ? dma_alloc_attrs+0x12b/0x140
Jan 31 11:59:59 x1 kernel:  ? report_bug+0xff/0x140
Jan 31 11:59:59 x1 kernel:  ? handle_bug+0x58/0x90
Jan 31 11:59:59 x1 kernel:  ? exc_invalid_op+0x17/0x70
Jan 31 11:59:59 x1 kernel:  ? asm_exc_invalid_op+0x1a/0x20
Jan 31 11:59:59 x1 kernel:  ? dma_alloc_attrs+0x12b/0x140
Jan 31 11:59:59 x1 kernel:  ipu6_psys_probe+0x37d/0x4b0 [intel_ipu6_psys]
Jan 31 11:59:59 x1 kernel:  ? __pfx_ipu6_psys_probe+0x10/0x10 [intel_ipu6_psys]
Jan 31 11:59:59 x1 kernel:  auxiliary_bus_probe+0x46/0x80
Jan 31 11:59:59 x1 kernel:  ? driver_sysfs_add+0x57/0xc0
Jan 31 11:59:59 x1 kernel:  really_probe+0xdb/0x340
Jan 31 11:59:59 x1 kernel:  ? pm_runtime_barrier+0x54/0x90
Jan 31 11:59:59 x1 kernel:  ? __pfx___driver_attach+0x10/0x10
Jan 31 11:59:59 x1 kernel:  __driver_probe_device+0x78/0x110
Jan 31 11:59:59 x1 kernel:  driver_probe_device+0x1f/0xa0
Jan 31 11:59:59 x1 kernel:  __driver_attach+0xba/0x1c0
Jan 31 11:59:59 x1 kernel:  bus_for_each_dev+0x8c/0xe0
Jan 31 11:59:59 x1 kernel:  bus_add_driver+0x142/0x220
Jan 31 11:59:59 x1 kernel:  driver_register+0x72/0xd0
Jan 31 11:59:59 x1 kernel:  __auxiliary_driver_register+0x6e/0xd0
Jan 31 11:59:59 x1 kernel:  ? __pfx_ipu6_psys_aux_driver_init+0x10/0x10 [intel_ipu6_psys]
Jan 31 11:59:59 x1 kernel:  do_one_initcall+0x58/0x310
Jan 31 11:59:59 x1 kernel:  do_init_module+0x90/0x260
Jan 31 11:59:59 x1 kernel:  __do_sys_init_module+0x17a/0x1b0
Jan 31 11:59:59 x1 kernel:  do_syscall_64+0x82/0x160
Jan 31 11:59:59 x1 kernel:  ? exc_page_fault+0x7e/0x180
Jan 31 11:59:59 x1 kernel:  entry_SYSCALL_64_after_hwframe+0x76/0x7e
Jan 31 11:59:59 x1 kernel: RIP: 0033:0x7f8ff1f0228e
Jan 31 11:59:59 x1 kernel: Code: 48 8b 0d 85 3b 0f 00 f7 d8 64 89 01 48 83 c8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 90 f3 0f 1e fa 49 89 ca b8 af 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d 52 3b 0f 00 f7 d8 64 89 01 48
Jan 31 11:59:59 x1 kernel: RSP: 002b:00007ffdfbde11e8 EFLAGS: 00000246 ORIG_RAX: 00000000000000af
Jan 31 11:59:59 x1 kernel: RAX: ffffffffffffffda RBX: 000055a0687e9240 RCX: 00007f8ff1f0228e
Jan 31 11:59:59 x1 kernel: RDX: 000055a05859a715 RSI: 0000000000041a65 RDI: 00007f8ff13a7010
Jan 31 11:59:59 x1 kernel: RBP: 00007ffdfbde12a0 R08: 000055a0687e8010 R09: 0000000000000007
Jan 31 11:59:59 x1 kernel: R10: 0000000000000001 R11: 0000000000000246 R12: 000055a05859a715
Jan 31 11:59:59 x1 kernel: R13: 0000000000040000 R14: 000055a0687e92e0 R15: 0000000000000000
Jan 31 11:59:59 x1 kernel:  </TASK>
Jan 31 11:59:59 x1 kernel: ---[ end trace 0000000000000000 ]---

Signed-off-by: Hans de Goede <hdegoede@redhat.com>
---
 drivers/media/pci/intel/ipu6/psys/ipu-psys.c  | 64 ++++++++++++++++++-
 drivers/media/pci/intel/ipu6/psys/ipu6-ppg.c  |  6 +-
 drivers/media/pci/intel/ipu6/psys/ipu6-psys.c | 22 +++++--
 3 files changed, 85 insertions(+), 7 deletions(-)

diff --git a/drivers/media/pci/intel/ipu6/psys/ipu-psys.c b/drivers/media/pci/intel/ipu6/psys/ipu-psys.c
index 36f99a3b8..7c512e5ae 100644
--- a/drivers/media/pci/intel/ipu6/psys/ipu-psys.c
+++ b/drivers/media/pci/intel/ipu6/psys/ipu-psys.c
@@ -52,6 +52,7 @@
 #include "ipu-psys.h"
 #include "ipu6-platform-regs.h"
 #include "ipu6-fw-com.h"
+#include "ipu6-dma.h"
 #endif
 
 static bool async_fw_init;
@@ -228,9 +229,12 @@ struct ipu_psys_pg *__get_pg_buf(struct ipu_psys *psys, size_t pg_size)
 #if LINUX_VERSION_CODE < KERNEL_VERSION(6, 10, 0)
 	kpg->pg = dma_alloc_attrs(&psys->adev->dev, pg_size,
 				  &kpg->pg_dma_addr, GFP_KERNEL, 0);
-#else
+#elif LINUX_VERSION_CODE < KERNEL_VERSION(6, 12, 0)
 	kpg->pg = dma_alloc_attrs(dev, pg_size,  &kpg->pg_dma_addr,
 				  GFP_KERNEL, 0);
+#else
+	kpg->pg = ipu6_dma_alloc(to_ipu6_bus_device(dev), pg_size,
+				 &kpg->pg_dma_addr, GFP_KERNEL, 0);
 #endif
 	if (!kpg->pg) {
 		kfree(kpg);
@@ -597,6 +601,7 @@ static void ipu_dma_buf_detach(struct dma_buf *dbuf,
 	attach->priv = NULL;
 }
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(6, 12, 0)
 static struct sg_table *ipu_dma_buf_map(struct dma_buf_attachment *attach,
 					enum dma_data_direction dir)
 {
@@ -658,6 +663,50 @@ static void ipu_dma_buf_unmap(struct dma_buf_attachment *attach,
 #endif
 }
 
+#else
+
+static struct sg_table *ipu_dma_buf_map(struct dma_buf_attachment *attach,
+					enum dma_data_direction dir)
+{
+	struct ipu_dma_buf_attach *ipu_attach = attach->priv;
+	struct ipu6_bus_device *adev = to_ipu6_bus_device(attach->dev);
+	struct pci_dev *pdev = adev->isp->pdev;
+	unsigned long attrs;
+	int ret;
+
+	attrs = DMA_ATTR_SKIP_CPU_SYNC;
+	ret = dma_map_sgtable(&pdev->dev, ipu_attach->sgt, dir, attrs);
+	if (ret) {
+		dev_dbg(attach->dev, "buf map failed\n");
+		return ERR_PTR(-EIO);
+	}
+
+	ret = ipu6_dma_map_sgtable(adev, ipu_attach->sgt, dir, attrs);
+	if (ret) {
+		dma_unmap_sgtable(&pdev->dev, ipu_attach->sgt, dir, attrs);
+		return ERR_PTR(-EIO);
+	}
+
+	/*
+	 * Initial cache flush to avoid writing dirty pages for buffers which
+	 * are later marked as IPU_BUFFER_FLAG_NO_FLUSH.
+	 */
+	ipu6_dma_sync_sgtable(adev, ipu_attach->sgt);
+
+	return ipu_attach->sgt;
+}
+
+static void ipu_dma_buf_unmap(struct dma_buf_attachment *attach,
+			      struct sg_table *sgt, enum dma_data_direction dir)
+{
+	struct ipu6_bus_device *adev = to_ipu6_bus_device(attach->dev);
+	struct pci_dev *pdev = adev->isp->pdev;
+
+	ipu6_dma_unmap_sgtable(adev, sgt, dir, DMA_ATTR_SKIP_CPU_SYNC);
+	dma_unmap_sgtable(&pdev->dev, sgt, dir, DMA_ATTR_SKIP_CPU_SYNC);
+}
+#endif
+
 static int ipu_dma_buf_mmap(struct dma_buf *dbuf, struct vm_area_struct *vma)
 {
 	return -ENOTTY;
@@ -2371,7 +2420,12 @@ static int ipu6_psys_probe(struct auxiliary_device *auxdev,
 		kpg = kzalloc(sizeof(*kpg), GFP_KERNEL);
 		if (!kpg)
 			goto out_free_pgs;
+
+#if LINUX_VERSION_CODE < KERNEL_VERSION(6, 12, 0)
 		kpg->pg = dma_alloc_attrs(dev, IPU_PSYS_PG_MAX_SIZE,
+#else
+		kpg->pg = ipu6_dma_alloc(adev, IPU_PSYS_PG_MAX_SIZE,
+#endif
 					  &kpg->pg_dma_addr,
 					  GFP_KERNEL, 0);
 		if (!kpg->pg) {
@@ -2426,7 +2480,11 @@ out_release_fw_com:
 	ipu6_fw_com_release(psys->fwcom, 1);
 out_free_pgs:
 	list_for_each_entry_safe(kpg, kpg0, &psys->pgs, list) {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(6, 12, 0)
 		dma_free_attrs(dev, kpg->size, kpg->pg, kpg->pg_dma_addr, 0);
+#else
+		ipu6_dma_free(adev, kpg->size, kpg->pg, kpg->pg_dma_addr, 0);
+#endif
 		kfree(kpg);
 	}
 
@@ -2484,8 +2542,10 @@ static void ipu6_psys_remove(struct auxiliary_device *auxdev)
 #if LINUX_VERSION_CODE < KERNEL_VERSION(6, 10, 0)
 		dma_free_attrs(&adev->dev, kpg->size, kpg->pg,
 			       kpg->pg_dma_addr, 0);
-#else
+#elif LINUX_VERSION_CODE < KERNEL_VERSION(6, 12, 0)
 		dma_free_attrs(dev, kpg->size, kpg->pg, kpg->pg_dma_addr, 0);
+#else
+		ipu6_dma_free(psys->adev, kpg->size, kpg->pg, kpg->pg_dma_addr, 0);
 #endif
 		kfree(kpg);
 	}
diff --git a/drivers/media/pci/intel/ipu6/psys/ipu6-ppg.c b/drivers/media/pci/intel/ipu6/psys/ipu6-ppg.c
index 9038f69cd..5e6fb9a1b 100644
--- a/drivers/media/pci/intel/ipu6/psys/ipu6-ppg.c
+++ b/drivers/media/pci/intel/ipu6/psys/ipu6-ppg.c
@@ -8,6 +8,7 @@
 #include <asm/cacheflush.h>
 
 #include "ipu6-ppg.h"
+#include "ipu6-dma.h"
 
 static bool enable_suspend_resume;
 module_param(enable_suspend_resume, bool, 0664);
@@ -75,9 +76,12 @@ __get_buf_set(struct ipu_psys_fh *fh, size_t buf_set_size)
 	kbuf_set->kaddr = dma_alloc_attrs(&fh->psys->adev->dev,
 					  buf_set_size, &kbuf_set->dma_addr,
 					  GFP_KERNEL, 0);
-#else
+#elif LINUX_VERSION_CODE < KERNEL_VERSION(6, 12, 0)
 	kbuf_set->kaddr = dma_alloc_attrs(dev, buf_set_size,
 					  &kbuf_set->dma_addr, GFP_KERNEL, 0);
+#else
+	kbuf_set->kaddr = ipu6_dma_alloc(to_ipu6_bus_device(dev), buf_set_size,
+					  &kbuf_set->dma_addr, GFP_KERNEL, 0);
 #endif
 	if (!kbuf_set->kaddr) {
 		kfree(kbuf_set);
diff --git a/drivers/media/pci/intel/ipu6/psys/ipu6-psys.c b/drivers/media/pci/intel/ipu6/psys/ipu6-psys.c
index 0c3a5ca62..58662ea16 100644
--- a/drivers/media/pci/intel/ipu6/psys/ipu6-psys.c
+++ b/drivers/media/pci/intel/ipu6/psys/ipu6-psys.c
@@ -30,6 +30,7 @@
 #include "ipu6-ppg.h"
 #include "ipu6-platform-regs.h"
 #include "ipu6-platform-buttress-regs.h"
+#include "ipu6-dma.h"
 #endif
 
 #if LINUX_VERSION_CODE < KERNEL_VERSION(6, 13, 0)
@@ -450,10 +451,12 @@ static struct ipu_psys_kcmd *ipu_psys_copy_cmd(struct ipu_psys_command *cmd,
 				       kcmd->kbufs[i]->sgt->sgl,
 				       kcmd->kbufs[i]->sgt->orig_nents,
 				       DMA_BIDIRECTIONAL);
-#else
+#elif LINUX_VERSION_CODE < KERNEL_VERSION(6, 12, 0)
 		dma_sync_sg_for_device(dev, kcmd->kbufs[i]->sgt->sgl,
 				       kcmd->kbufs[i]->sgt->orig_nents,
 				       DMA_BIDIRECTIONAL);
+#else
+		ipu6_dma_sync_sgtable(psys->adev, kcmd->kbufs[i]->sgt);
 #endif
 	}
 
@@ -1102,11 +1105,16 @@ int ipu_psys_fh_init(struct ipu_psys_fh *fh)
 						  &kbuf_set->dma_addr,
 						  GFP_KERNEL,
 						  0);
-#else
+#elif LINUX_VERSION_CODE < KERNEL_VERSION(6, 12, 0)
 		kbuf_set->kaddr = dma_alloc_attrs(dev,
 						  IPU_PSYS_BUF_SET_MAX_SIZE,
 						  &kbuf_set->dma_addr,
 						  GFP_KERNEL, 0);
+#else
+		kbuf_set->kaddr = ipu6_dma_alloc(to_ipu6_bus_device(dev),
+						 IPU_PSYS_BUF_SET_MAX_SIZE,
+						 &kbuf_set->dma_addr,
+						 GFP_KERNEL, 0);
 #endif
 		if (!kbuf_set->kaddr) {
 			kfree(kbuf_set);
@@ -1124,8 +1132,11 @@ out_free_buf_sets:
 #if LINUX_VERSION_CODE < KERNEL_VERSION(6, 10, 0)
 		dma_free_attrs(&psys->adev->dev,
 			       kbuf_set->size, kbuf_set->kaddr,
-#else
+#elif LINUX_VERSION_CODE < KERNEL_VERSION(6, 12, 0)
 		dma_free_attrs(dev, kbuf_set->size, kbuf_set->kaddr,
+#else
+		ipu6_dma_free(to_ipu6_bus_device(dev),
+			       kbuf_set->size, kbuf_set->kaddr,
 #endif
 			       kbuf_set->dma_addr, 0);
 		list_del(&kbuf_set->list);
@@ -1229,8 +1240,11 @@ int ipu_psys_fh_deinit(struct ipu_psys_fh *fh)
 #if LINUX_VERSION_CODE < KERNEL_VERSION(6, 10, 0)
 		dma_free_attrs(&psys->adev->dev,
 			       kbuf_set->size, kbuf_set->kaddr,
-#else
+#elif LINUX_VERSION_CODE < KERNEL_VERSION(6, 12, 0)
 		dma_free_attrs(dev, kbuf_set->size, kbuf_set->kaddr,
+#else
+		ipu6_dma_free(to_ipu6_bus_device(dev),
+			       kbuf_set->size, kbuf_set->kaddr,
 #endif
 			       kbuf_set->dma_addr, 0);
 		list_del(&kbuf_set->list);
-- 
2.48.1

